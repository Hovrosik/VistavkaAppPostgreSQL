@page "/bilets"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using VistavkaApp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<VistavkaApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>Билеты</h1>

@if(op==1)
{
    <p>
        <a href="vistavkas">Возврат к списку выставок</a>
    </p>
}else
{
    <p>
        <a href="posetitels">Возврат к списку посетителей</a>
    </p>
}

<p>
    <a href="@($"bilets/create?id={id}&op={op}")">Создать</a>
</p>

<QuickGrid Class="table" Items="context.Bilets.Include(d=>d.Vistavka).Include(d=>d.Posetitel).Where(d=>op==1?d.VistavkaId==id:d.PosetitelId==id)">
    <PropertyColumn Property="bilet => bilet.DateOfVisit" Title="Дата посещения"/>
    <PropertyColumn Property="bilet => bilet.Price" Title="Цена"/>
    <PropertyColumn Property="bilet => bilet.Vistavka!.VistavkaName" Title="Название выставки"/>
    <PropertyColumn Property="bilet => bilet.Posetitel!.PosetitelName + ' ' + bilet.Posetitel!.PosetitelSurname" Title="Посетитель"/>

    <TemplateColumn Context="bilet">
        <a href="@($"bilets/edit?biletid={bilet.BiletId}&op={op}")">Редактировать</a> |
        <a href="@($"bilets/details?biletid={bilet.BiletId}&op={op}")">Просмотр</a> |
        <a href="@($"bilets/delete?biletid={bilet.BiletId}&op={op}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    [SupplyParameterFromQuery]
    private int? id { get; set; }

    [SupplyParameterFromQuery]
    private int? op { get; set; }

    public IEnumerable<Vistavka> vistavkas = default!;

    public IEnumerable<Posetitel> posetitels = default!;

    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        if(id == null || op == null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
