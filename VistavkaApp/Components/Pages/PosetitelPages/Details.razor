@page "/posetitels/details"
@using Microsoft.EntityFrameworkCore
@using VistavkaApp.Data
@inject IDbContextFactory<VistavkaApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Просмотр</h1>

<div>
    <h2>Посетитель</h2>
    <hr />
    @if (posetitel is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Фамилия</dt>
            <dd class="col-sm-10">@posetitel.PosetitelSurname</dd>
            <dt class="col-sm-2">Имя</dt>
            <dd class="col-sm-10">@posetitel.PosetitelName</dd>
            <dt class="col-sm-2">Дата рождения</dt>
            <dd class="col-sm-10">@posetitel.DateOfBirth</dd>
            <dt class="col-sm-2">Номер телефона</dt>
            <dd class="col-sm-10">@posetitel.PhoneNumber</dd>
            <dt class="col-sm-2">Почта</dt>
            <dd class="col-sm-10">@posetitel.Email</dd>
        </dl>
        <div>
            <a href="@($"/posetitels/edit?posetitelid={posetitel.PosetitelId}")">Редактировать</a> |
            <a href="@($"/posetitels")">Вернуться к списку</a>
        </div>
    }
</div>

@code {
    private Posetitel? posetitel;

    [SupplyParameterFromQuery]
    private int PosetitelId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        posetitel = await context.Posetitels.FirstOrDefaultAsync(m => m.PosetitelId == PosetitelId);

        if (posetitel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
